
* Lists ending with an operator do no work. Try `print [test =]`.

* Lists of words break on keywords such as TO. Try `print [a to b]`.

* Inline primitives that use `context::get_thing(<varname>)` or create a
  `context::get_parent()` because otherwise their own parameters are in the
  way; i.e. the QUEUE primitive accepts two parameters, the first one is named
  `queue`. So if you call that primitive as in: `queue "queue [some list]`,
  the `"queue` parameter is saved in the local `:queue` parameter and
  therefore the use `"queue` references it and not the user's `"queue`
  variable.

    ; the current implementation looks like this:
    to queue :queue :thing
      make :queue sentence :thing thing :queue
    end queue

    ; the `make :queue ...` inside the queue procedure above sets the local
    ; variable named `:queue`
    queue "queue [1 2 3]

* Actually implement support for libraries

* Fix all the functions that work on words, they have to view words as UTF-8
  and not just bytes.
  - This includes BUTFIRST, BUTLAST, ITEM, etc. (FIRST and LAST are done) We
    also add new functions so we still have access to bytes (i.e. FIRSTBYTE)
  - Make sure the lexer works as expected; long term we could look into
    offering support for extended character sets (i.e. recognize other
    digits, fractions, signs/punctuation, etc.)

* Actually write tests to verify every thing (i.e. full coverage, especially for a language!)

* Add support for a Logo library (i.e. libraries written in logo that we
  can link against)

* Add support to interface with C functions, right now we can only call
  Logo functions.

* "Correctly" implement the SHELL command so we can have input as well.
  (i.e. create the OPENCOMMAND "<shell command> and then the READ...
  and WRITE... commands all work as expected.)

vim: ts=4 sw=4 et
